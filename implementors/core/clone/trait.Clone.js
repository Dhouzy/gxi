(function() {var implementors = {};
implementors["gxi"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"gxi/errors/enum.Error.html\" title=\"enum gxi::errors::Error\">Error</a>",synthetic:false,types:["gxi::errors::Error"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/linecache/struct.StyleSpan.html\" title=\"struct gxi::linecache::StyleSpan\">StyleSpan</a>",synthetic:false,types:["gxi::linecache::StyleSpan"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/linecache/struct.Line.html\" title=\"struct gxi::linecache::Line\">Line</a>",synthetic:false,types:["gxi::linecache::Line"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/proto/struct.Style.html\" title=\"struct gxi::proto::Style\">Style</a>",synthetic:false,types:["gxi::proto::Style"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/proto/struct.Color.html\" title=\"struct gxi::proto::Color\">Color</a>",synthetic:false,types:["gxi::proto::Color"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"gxi/proto/enum.UnderlineOption.html\" title=\"enum gxi::proto::UnderlineOption\">UnderlineOption</a>",synthetic:false,types:["gxi::proto::UnderlineOption"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/proto/struct.ThemeSettings.html\" title=\"struct gxi::proto::ThemeSettings\">ThemeSettings</a>",synthetic:false,types:["gxi::proto::ThemeSettings"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/rpc/struct.Core.html\" title=\"struct gxi::rpc::Core\">Core</a>",synthetic:false,types:["gxi::rpc::Core"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"gxi/shared_queue/enum.CoreMsg.html\" title=\"enum gxi::shared_queue::CoreMsg\">CoreMsg</a>",synthetic:false,types:["gxi::shared_queue::CoreMsg"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/shared_queue/struct.SharedQueue.html\" title=\"struct gxi::shared_queue::SharedQueue\">SharedQueue</a>",synthetic:false,types:["gxi::shared_queue::SharedQueue"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/theme/struct.Color.html\" title=\"struct gxi::theme::Color\">Color</a>",synthetic:false,types:["gxi::theme::Color"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/theme/struct.Style.html\" title=\"struct gxi::theme::Style\">Style</a>",synthetic:false,types:["gxi::theme::Style"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gxi/theme/struct.Theme.html\" title=\"struct gxi::theme::Theme\">Theme</a>",synthetic:false,types:["gxi::theme::Theme"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
