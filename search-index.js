var N = null;var searchIndex = {};
searchIndex["gxi"]={"doc":"Welcome to the gxi docs! Since gxi isn't a library these…","items":[[5,"main","gxi","",N,[[]]],[0,"macros","","",N,N],[0,"about_win","","",N,N],[3,"AboutWin","gxi::about_win","The about window, which displays some simple info about gxi",N,N],[12,"about_dialog","","",0,N],[11,"new","","",0,[[["applicationwindow"]],["rc",["refcell"]]]],[0,"edit_view","gxi","",N,N],[3,"EVReplace","gxi::edit_view","The EvReplace struct holds the find+replace elements of…",N,N],[12,"replace_expander","","",1,N],[12,"replace_revealer","","",1,N],[12,"replace_entry","","",1,N],[3,"EVFont","","The EvFont struct holds all information about the font…",N,N],[12,"font_height","","",2,N],[12,"font_width","","",2,N],[12,"font_ascent","","",2,N],[12,"font_descent","","",2,N],[12,"font_desc","","",2,N],[3,"EVInterfaceFont","","",N,N],[12,"font_height","","",3,N],[12,"font_width","","",3,N],[12,"font_ascent","","",3,N],[12,"font_descent","","",3,N],[12,"font_desc","","",3,N],[3,"EditView","","The EditView is the part of gxi that does the actual…",N,N],[12,"core","","",4,N],[12,"main_state","","",4,N],[12,"view_id","","",4,N],[12,"file_name","","",4,N],[12,"pristine","","",4,N],[12,"da","","",4,N],[12,"linecount_da","","",4,N],[12,"root_widget","","",4,N],[12,"tab_widget","","",4,N],[12,"search_bar","","",4,N],[12,"search_entry","","",4,N],[12,"find_status_label","","",4,N],[12,"label","","",4,N],[12,"close_button","","",4,N],[12,"hscrollbar","","",4,N],[12,"vscrollbar","","",4,N],[12,"line_cache","","",4,N],[12,"replace","","",4,N],[12,"edit_font","","",4,N],[12,"interface_font","","",4,N],[5,"convert_gtk_modifier","","Convert gtk modifiers to xi ones",N,[[["modifiertype"]],["u32"]]],[11,"new","","Initialises a new EditView. Sets up scrollbars, the actual…",4,[[["rc"],["rc"],["option",["string"]],["str"]],["rc",["refcell"]]]],[11,"set_file","","Set the name of the file the EditView is currently editing…",4,[[["self"],["str"]]]],[11,"update_title","","Update the title of the EditView to the currently set…",4,[[["self"]]]],[11,"config_changed","","If xi-editor sends us a config_changed msg we process it…",4,[[["self"],["value"]]]],[11,"update","","If xi-editor sends us a update msg we process it here,…",4,[[["self"],["value"]]]],[11,"change_scrollbar_visibility","","",4,[[["self"]]]],[11,"da_px_to_cell","","Maps x|y pixel coordinates to the line num and col. This…",4,N],[11,"da_size_allocate","","Allocate the space our DrawingArea needs.",4,[[["self"],["i32"],["i32"]]]],[11,"vscrollbar_change_value","","Upon changing the vertical scrollbar we have to call…",4,[[["self"],["f64"]],["inhibit"]]],[11,"update_visible_scroll_region","","This updates the part of the document that's visible to…",4,[[["self"]]]],[11,"get_text_size","","Returns the width&height of the entire document",4,N],[11,"handle_da_draw","","Handles the drawing of the EditView. This is called when…",4,[[["self"],["context"]],["inhibit"]]],[11,"handle_linecount_draw","","This draws the linecount. We have this as our own widget…",4,[[["self"],["context"]],["inhibit"]]],[11,"create_layout_for_linecount","","Creates a pango layout for a particular linecount (the…",4,[[["self"],["context"],["mainstate"],["u64"],["usize"]],["layout"]]],[11,"line_width","","Checks how wide a line is",4,[[["self"],["str"]],["f64"]]],[11,"create_layout_for_line","","Creates a pango layout for a particular line in the…",4,[[["self"],["context"],["mainstate"],["line"]],["layout"]]],[11,"scroll_to","","Scrolls vertically to the line specified and horizontally…",4,[[["self"],["u64"],["u64"]]]],[11,"handle_button_press","","Handles button presses such as Shift, Ctrl etc. and…",4,[[["self"],["eventbutton"]],["inhibit"]]],[11,"handle_drag","","Handle selecting line(s) by dragging the mouse across them…",4,[[["self"],["eventmotion"]],["inhibit"]]],[11,"handle_scroll","","Handles scroll events, i.e. the user dragging the…",4,[[["self"],["eventscroll"]],["inhibit"]]],[11,"handle_key_press_event","","Handles all (special) key press events, e.g. copy,…",4,[[["self"],["eventkey"]],["inhibit"]]],[11,"do_cut","","Copies text to the clipboard",4,[[["self"],["str"]]]],[11,"do_copy","","Copies text to the clipboard",4,[[["self"],["str"]]]],[11,"do_paste","","Pastes text from the clipboard into the EditView",4,[[["self"],["str"]]]],[11,"do_paste_primary","","",4,[[["self"],["str"],["u64"],["u64"]]]],[11,"do_resize","","Resize the EditView",4,[[["self"],["str"],["i32"],["i32"]]]],[11,"start_search","","Opens the find dialog (Ctrl+F)",4,[[["self"]]]],[11,"start_replace","","Opens the replace dialog (Ctrl+R)",4,[[["self"]]]],[11,"stop_search","","Closes the find/replace dialog",4,[[["self"]]]],[11,"find_status","","Displays how many matches have been found in the…",4,[[["self"],["value"]]]],[11,"replace_status","","Displays what chars will be replaced in the replace dialog",4,[[["self"],["value"]]]],[11,"find_next","","Go to the next match in the find/replace dialog",4,[[["self"]]]],[11,"find_prev","","Go the to previous match in the find/replace dialog",4,[[["self"]]]],[11,"search_changed","","Tells xi-editor that we're searching for a different…",4,[[["self"],["option",["string"]]]]],[11,"replace","","Replace one match with the replacement string",4,[[["self"]]]],[11,"replace_all","","Replace all matches with the replacement string",4,[[["self"]]]],[0,"errors","gxi","",N,N],[3,"ErrorDialog","gxi::errors","A simple ErrorDialog used for if stuff goes south.",N,N],[4,"Error","","",N,N],[13,"IO","","",5,N],[13,"DeToml","","",5,N],[13,"SerToml","","",5,N],[17,"_DERIVE_failure_Fail_FOR_Error","","",N,N],[17,"_DERIVE_failure_core_fmt_Display_FOR_Error","","",N,N],[11,"new","","Creates a new ErrorDialog containing the err_msg. Quits…",6,[[["errmsg"]]]],[0,"globals","gxi","",N,N],[7,"LOCALEDIR","gxi::globals","",N,N],[7,"APP_ID","","",N,N],[7,"VERSION","","",N,N],[0,"linecache","gxi","",N,N],[3,"StyleSpan","gxi::linecache","",N,N],[12,"start","","",7,N],[12,"len","","",7,N],[12,"id","","",7,N],[3,"Line","","A Struct representing one line which xi has sent us. #…",N,N],[12,"text","","",8,N],[12,"cursor","","",8,N],[12,"styles","","",8,N],[12,"line_num","","",8,N],[3,"LineCache","","",N,N],[12,"map","","",9,N],[12,"n_invalid_before","","",9,N],[12,"lines","","",9,N],[12,"n_invalid_after","","",9,N],[11,"from_json","","",8,[[["value"],["option",["u64"]]],["line"]]],[11,"text","","",8,[[["self"]],["str"]]],[11,"cursor","","",8,N],[11,"line_num","","",8,[[["self"]],["option"]]],[11,"new","","",9,[[],["linecache"]]],[11,"height","","",9,[[["self"]],["u64"]]],[11,"width","","",9,[[["self"]],["usize"]]],[11,"get_line","","",9,[[["self"],["u64"]],["option",["line"]]]],[11,"get_missing","","",9,[[["self"],["u64"],["u64"]],["vec"]]],[11,"apply_update","","",9,[[["self"],["value"]]]],[0,"main_win","gxi","",N,N],[3,"MeasureWidth","gxi::main_win","",N,N],[12,"id","","",10,N],[12,"strings","","",10,N],[3,"MainState","","",N,N],[12,"themes","","",11,N],[12,"theme_name","","",11,N],[12,"theme","","",11,N],[12,"styles","","",11,N],[12,"fonts","","",11,N],[12,"avail_languages","","",11,N],[12,"selected_language","","",11,N],[3,"MainWin","","",N,N],[12,"core","","",12,N],[12,"shared_queue","","",12,N],[12,"window","","",12,N],[12,"notebook","","",12,N],[12,"builder","","",12,N],[12,"views","","",12,N],[12,"w_to_ev","","",12,N],[12,"view_id_to_w","","",12,N],[12,"state","","",12,N],[4,"SaveAction","","",N,N],[13,"Save","","",13,N],[13,"CloseWithoutSave","","",13,N],[13,"Cancel","","",13,N],[17,"_IMPL_DESERIALIZE_FOR_MeasureWidth","","",N,N],[17,"GLADE_SRC","","",N,N],[11,"new","","",12,[[["application"],["sharedqueue"],["rc"],["arc",["mutex"]]],["rc",["refcell"]]]],[11,"handle_msg","","",12,[[["rc",["refcell"]],["coremsg"]]]],[11,"alert","","",12,[[["self"],["value"]]]],[11,"available_themes","","",12,[[["self"],["value"]]]],[11,"theme_changed","","",12,[[["self"],["value"]]]],[11,"available_plugins","","",12,[[["self"],["value"]]]],[11,"config_changed","","",12,[[["self"],["value"]]]],[11,"find_status","","",12,[[["self"],["value"]]]],[11,"replace_status","","",12,[[["self"],["value"]]]],[11,"def_style","","",12,[[["self"],["value"]]]],[11,"set_style","","",12,[[["self"],["usize"],["style"]]]],[11,"update","","",12,[[["self"],["value"]]]],[11,"scroll_to","","",12,[[["self"],["value"]]]],[11,"plugin_started","","",12,[[["self"],["value"]]]],[11,"plugin_stopped","","",12,[[["self"],["value"]]]],[11,"measure_width","","",12,[[["self"],["option",["u64"]],["value"]]]],[11,"available_languages","","",12,[[["self"],["value"]]]],[11,"language_changed","","",12,[[["self"],["value"]]]],[11,"set_language","","",12,[[["rc"],["str"],["str"]]]],[11,"handle_open_button","","Display the FileChooserNative for opening, send the result…",12,[[["rc"]]]],[11,"handle_save_button","","",12,[[["rc"]]]],[11,"current_save_as","","",12,[[["rc"]]]],[11,"save_as","","Display the FileChooserNative, send the result to the Xi…",12,[[["rc"],["rc"]]]],[11,"prefs","","",12,[[["rc",["refcell"]],["arc",["mutex"]]]]],[11,"about","","",12,[[["rc",["refcell"]]]]],[11,"find","","",12,[[["rc"]]]],[11,"replace","","",12,[[["rc"]]]],[11,"get_current_edit_view","","",12,[[["self"]],["rc",["refcell"]]]],[11,"req_new_view","","",12,[[["self"],["option",["str"]]]]],[11,"new_view_response","","",12,[[["rc"],["option",["string"]],["value"]]]],[11,"close_all","","",12,[[["rc",["refcell"]]],["saveaction"]]],[11,"close","","",12,[[["rc"]],["saveaction"]]],[11,"close_view","","",12,[[["rc"],["rc"]],["saveaction"]]],[0,"pref_storage","gxi","",N,N],[3,"Config","gxi::pref_storage","Generic wrapper struct around XiConfig",N,N],[12,"path","","",14,N],[12,"config","","",14,N],[3,"XiConfig","","For stuff that goes into preferences.xiconfig",N,N],[12,"tab_size","","",15,N],[12,"translate_tabs_to_spaces","","",15,N],[12,"use_tab_stops","","",15,N],[12,"plugin_search_path","","",15,N],[12,"font_face","","",15,N],[12,"font_size","","",15,N],[12,"auto_indent","","",15,N],[12,"scroll_past_end","","",15,N],[12,"wrap_width","","",15,N],[12,"word_wrap","","",15,N],[12,"autodetect_whitespace","","",15,N],[12,"line_ending","","",15,N],[12,"surrounding_pairs","","",15,N],[12,"save_with_newline","","",15,N],[5,"get_theme_schema","","",N,[[],["string"]]],[5,"set_theme_schema","","",N,[[["str"]]]],[5,"get_default_monospace_font_schema","","",N,[[],["string"]]],[5,"get_default_interface_font_schema","","",N,[[],["string"]]],[5,"get_draw_trailing_spaces_schema","","",N,[[],["bool"]]],[5,"set_draw_trailing_spaces_schema","","",N,[[["bool"]]]],[17,"_IMPL_DESERIALIZE_FOR_XiConfig","","",N,N],[17,"_IMPL_SERIALIZE_FOR_XiConfig","","",N,N],[11,"new","","",14,[[],["config"]]],[11,"open","","",14,[[["self"]],["result",["config","error"]]]],[11,"save","","Atomically write the config. First writes the config to a…",14,[[["self"]],["result",["error"]]]],[0,"prefs_win","gxi","",N,N],[3,"PrefsWin","gxi::prefs_win","",N,N],[12,"core","","",16,N],[12,"window","","",16,N],[11,"new","","",16,[[["applicationwindow"],["rc"],["rc"],["arc",["mutex"]]],["rc",["refcell"]]]],[0,"proto","gxi","",N,N],[3,"Style","gxi::proto","A mergeable style. All values except priority are optional.",N,N],[12,"id","","",17,N],[12,"fg_color","","32-bit RGBA value",17,N],[12,"bg_color","","32-bit RGBA value, default 0",17,N],[12,"weight","","100..900, default 400",17,N],[12,"italic","","default false",17,N],[12,"underline","","default false",17,N],[3,"Color","","RGBA colour, these numbers come directly from the theme so…",N,N],[12,"r","","Red component",18,N],[12,"g","","Green component",18,N],[12,"b","","Blue component",18,N],[12,"a","","Alpha component",18,N],[3,"ThemeSettings","","Various properties meant to be used to style a text…",N,N],[12,"foreground","","The default color for text.",19,N],[12,"background","","The default backgound color of the view.",19,N],[12,"caret","","Color of the caret.",19,N],[12,"line_highlight","","Color of the line the caret is in. Only used when the…",19,N],[12,"misspelling","","The color to use for the squiggly underline drawn under…",19,N],[12,"minimap_border","","The color of the border drawn around the viewport area of…",19,N],[12,"accent","","A color made available for use by the theme.",19,N],[12,"popup_css","","CSS passed to popups.",19,N],[12,"phantom_css","","CSS passed to phantoms.",19,N],[12,"bracket_contents_foreground","","Color of bracketed sections of text when the caret is in a…",19,N],[12,"bracket_contents_options","","Controls certain options when the caret is in a bracket…",19,N],[12,"brackets_foreground","","Foreground color of the brackets when the caret is next to…",19,N],[12,"brackets_background","","Background color of the brackets when the caret is next to…",19,N],[12,"brackets_options","","Controls certain options when the caret is next to a…",19,N],[12,"tags_foreground","","Color of tags when the caret is next to a tag. Only used…",19,N],[12,"tags_options","","Controls certain options when the caret is next to a tag.…",19,N],[12,"highlight","","The border color for \"other\" matches.",19,N],[12,"find_highlight","","Background color of regions matching the current search.",19,N],[12,"find_highlight_foreground","","Text color of regions matching the current search.",19,N],[12,"gutter","","Background color of the gutter.",19,N],[12,"gutter_foreground","","Foreground color of the gutter.",19,N],[12,"selection","","The background color of selected text.",19,N],[12,"selection_foreground","","A color that will override the scope-based text color of…",19,N],[12,"selection_background","","Deprecated!",19,N],[12,"selection_border","","Color of the selection regions border.",19,N],[12,"inactive_selection","","The background color of a selection in a view that is not…",19,N],[12,"inactive_selection_foreground","","A color that will override the scope-based text color of…",19,N],[12,"guide","","Color of the guides displayed to indicate nesting levels.",19,N],[12,"active_guide","","Color of the guide lined up with the caret. Only applied…",19,N],[12,"stack_guide","","Color of the current guide’s parent guide level. Only used…",19,N],[12,"highlight_foreground","","Foreground color for regions added via…",19,N],[12,"shadow","","The color of the shadow used when a text area can be…",19,N],[4,"UnderlineOption","","",N,N],[13,"None","","",20,N],[13,"Underline","","",20,N],[13,"StippledUnderline","","",20,N],[13,"SquigglyUnderline","","",20,N],[17,"_IMPL_SERIALIZE_FOR_Style","","",N,N],[17,"_IMPL_DESERIALIZE_FOR_Style","","",N,N],[17,"_IMPL_SERIALIZE_FOR_Color","","",N,N],[17,"_IMPL_DESERIALIZE_FOR_Color","","",N,N],[17,"_IMPL_SERIALIZE_FOR_UnderlineOption","","",N,N],[17,"_IMPL_DESERIALIZE_FOR_UnderlineOption","","",N,N],[17,"_IMPL_SERIALIZE_FOR_ThemeSettings","","",N,N],[17,"_IMPL_DESERIALIZE_FOR_ThemeSettings","","",N,N],[0,"rpc","gxi","",N,N],[3,"Core","gxi::rpc","",N,N],[12,"state","","",21,N],[3,"CoreState","","",N,N],[12,"xi_peer","","",22,N],[12,"id","","",22,N],[12,"pending","","",22,N],[17,"XI_SHIFT_KEY_MASK","","",N,N],[17,"XI_CONTROL_KEY_MASK","","",N,N],[17,"XI_ALT_KEY_MASK","","",N,N],[8,"Callback","","",N,N],[10,"call","","",23,[[["box"],["value"]]]],[11,"new","","Sets up a new RPC connection, also starting a thread to…",21,[[["xipeer"],["receiver",["value"]],["sender",["errmsg"]],["sharedqueue"]],["core"]]],[11,"send_notification","","",21,[[["self"],["str"],["value"]]]],[11,"send_result","","",21,[[["self"],["u64"],["value"]]]],[11,"send_request","","Calls the callback with the result (from a different…",21,[[["self"],["str"],["value"],["f"]]]],[11,"save","","",21,[[["self"],["str"],["str"]]]],[11,"close_view","","",21,[[["self"],["str"]]]],[11,"send_edit_cmd","","",21,[[["self"],["str"],["str"],["value"]]]],[11,"client_started","","",21,[[["self"],["str"],["str"]]]],[11,"set_theme","","",21,[[["self"],["str"]]]],[11,"insert","","Inserts the `chars` string at the current cursor location.",21,[[["self"],["str"],["str"]]]],[11,"resize","","",21,[[["self"],["str"],["i32"],["i32"]]]],[11,"delete_forward","","",21,[[["self"],["str"]]]],[11,"delete_backward","","",21,[[["self"],["str"]]]],[11,"insert_newline","","",21,[[["self"],["str"]]]],[11,"insert_tab","","",21,[[["self"],["str"]]]],[11,"move_up","","",21,[[["self"],["str"]]]],[11,"move_down","","",21,[[["self"],["str"]]]],[11,"move_left","","",21,[[["self"],["str"]]]],[11,"move_right","","",21,[[["self"],["str"]]]],[11,"move_up_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_down_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_left_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_right_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_word_left","","",21,[[["self"],["str"]]]],[11,"move_word_right","","",21,[[["self"],["str"]]]],[11,"move_word_left_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_word_right_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_to_left_end_of_line","","",21,[[["self"],["str"]]]],[11,"move_to_right_end_of_line","","",21,[[["self"],["str"]]]],[11,"move_to_left_end_of_line_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_to_right_end_of_line_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_to_beginning_of_document","","",21,[[["self"],["str"]]]],[11,"move_to_end_of_document","","",21,[[["self"],["str"]]]],[11,"move_to_beginning_of_document_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"move_to_end_of_document_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"page_up","","",21,[[["self"],["str"]]]],[11,"page_down","","",21,[[["self"],["str"]]]],[11,"page_up_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"page_down_and_modify_selection","","",21,[[["self"],["str"]]]],[11,"select_all","","",21,[[["self"],["str"]]]],[11,"gesture_point_select","","moves the cursor to a point (click)",21,[[["self"],["str"],["u64"],["u64"]]]],[11,"gesture_toggle_sel","","adds or removes a selection at a point (new cursor)",21,[[["self"],["str"],["u64"],["u64"]]]],[11,"gesture_range_select","","modifies the selection to include a point (shift+click)",21,[[["self"],["str"],["u64"],["u64"]]]],[11,"gesture_line_select","","sets the selection to a given line (triple click)",21,[[["self"],["str"],["u64"],["u64"]]]],[11,"gesture_word_select","","sets the selection to a given word (double click)",21,[[["self"],["str"],["u64"],["u64"]]]],[11,"gesture_multi_line_select","","adds a line to the selection",21,[[["self"],["str"],["u64"],["u64"]]]],[11,"gesture_multi_word_select","","adds a word to the selection",21,[[["self"],["str"],["u64"],["u64"]]]],[11,"scroll","","Notifies the back-end of the visible scroll region,…",21,[[["self"],["str"],["u64"],["u64"]]]],[11,"drag","","",21,[[["self"],["str"],["u64"],["u64"],["u32"]]]],[11,"undo","","",21,[[["self"],["str"]]]],[11,"redo","","",21,[[["self"],["str"]]]],[11,"cut","","",21,[[["self"],["str"]],["option",["string"]]]],[11,"copy","","",21,[[["self"],["str"]],["option",["string"]]]],[11,"paste","","",21,[[["self"],["str"],["str"]]]],[11,"find","","Searches the document for `chars`, if present, falling…",21,[[["self"],["str"],["str"],["bool"],["option",["bool"]]]]],[11,"find_next","","",21,[[["self"],["str"],["option",["bool"]],["option",["bool"]]]]],[11,"find_previous","","",21,[[["self"],["str"],["option",["bool"]]]]],[11,"highlight_find","","",21,[[["self"],["str"],["bool"]]]],[11,"replace","","",21,[[["self"],["str"],["str"],["bool"]]]],[11,"replace_next","","",21,[[["self"],["str"]]]],[11,"replace_all","","",21,[[["self"],["str"]]]],[11,"set_language","","",21,[[["self"],["str"],["str"]]]],[0,"shared_queue","gxi","",N,N],[3,"ErrMsg","gxi::shared_queue","",N,N],[12,"msg","","",24,N],[12,"fatal","","",24,N],[3,"SharedQueue","","",N,N],[12,"queue_rx","","",25,N],[12,"queue_tx","","",25,N],[4,"CoreMsg","","",N,N],[13,"Notification","","",26,N],[12,"method","gxi::shared_queue::CoreMsg","",26,N],[12,"params","","",26,N],[12,"id","","",26,N],[13,"NewViewReply","gxi::shared_queue","",26,N],[12,"file_name","gxi::shared_queue::CoreMsg","",26,N],[12,"value","","",26,N],[11,"new","gxi::shared_queue","",25,[[],["sharedqueue"]]],[11,"add_core_msg","","A message from xi-editor that we have to process (e.g.…",25,[[["self"],["coremsg"]]]],[11,"send_msg","","A message that we want to send to xi-editor in order for…",25,[[["self"],["coremsg"]]]],[0,"theme","gxi","",N,N],[3,"Color","gxi::theme","",N,N],[12,"r","","",27,N],[12,"g","","",27,N],[12,"b","","",27,N],[12,"a","","",27,N],[3,"Style","","",N,N],[12,"fg_color","","32-bit RGBA value",28,N],[12,"bg_color","","32-bit RGBA value, default 0",28,N],[12,"weight","","100..900, default 400",28,N],[12,"italic","","default false",28,N],[12,"underline","","default false",28,N],[3,"Theme","","",N,N],[12,"foreground","","Text color for the view.",29,N],[12,"background","","Backgound color of the view.",29,N],[12,"caret","","Color of the caret.",29,N],[12,"line_highlight","","Color of the line the caret is in.",29,N],[12,"find_highlight","","Background color of regions matching the current search.",29,N],[12,"find_highlight_foreground","","",29,N],[12,"gutter","","Background color of the gutter.",29,N],[12,"gutter_foreground","","The color of the line numbers in the gutter.",29,N],[12,"selection","","The background color of selections.",29,N],[12,"selection_foreground","","text color of the selection regions.",29,N],[12,"selection_border","","Color of the selection regions border.",29,N],[12,"inactive_selection","","",29,N],[12,"inactive_selection_foreground","","",29,N],[12,"shadow","","The color of the shadow used when a text area can be…",29,N],[5,"set_source_color","","",N,[[["context"],["color"]]]],[18,"WHITE","","",27,N],[18,"BLACK","","",27,N],[11,"from_u8s","","",27,[[["u8"],["u8"],["u8"],["u8"]],["color"]]],[11,"from_ts_proto","","",27,[[["color"]],["color"]]],[11,"from_u32_argb","","",27,[[["u32"]],["color"]]],[11,"r_u16","","",27,[[["self"]],["u16"]]],[11,"g_u16","","",27,[[["self"]],["u16"]]],[11,"b_u16","","",27,[[["self"]],["u16"]]],[11,"from_proto","","",28,[[["style"]],["style"]]],[11,"from_proto","","",29,[[["themesettings"]],["theme"]]],[0,"xi_thread","gxi","",N,N],[3,"XiPeer","gxi::xi_thread","",N,N],[12,"tx","","",30,N],[3,"ChanReader","","",N,N],[12,"0","","",31,N],[3,"ChanWriter","","",N,N],[12,"sender","","",32,N],[5,"start_xi_thread","","",N,N],[11,"send","","",30,[[["self"],["string"]]]],[11,"send_json","","",30,[[["self"],["value"]]]],[14,"clone","gxi","",N,N],[11,"from","gxi::about_win","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","gxi::edit_view","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","gxi::errors","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"as_fail","","",5,[[["self"]],["fail"]]],[11,"from","gxi::linecache","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","gxi::main_win","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","gxi::pref_storage","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","gxi::prefs_win","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","gxi::proto","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","gxi::rpc","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","gxi::shared_queue","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","gxi::theme","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","gxi::xi_thread","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"eq","gxi::errors","",5,[[["self"],["error"]],["bool"]]],[11,"ne","","",5,[[["self"],["error"]],["bool"]]],[11,"eq","gxi::main_win","",13,[[["self"],["saveaction"]],["bool"]]],[11,"eq","gxi::proto","",17,[[["self"],["style"]],["bool"]]],[11,"ne","","",17,[[["self"],["style"]],["bool"]]],[11,"eq","","",18,[[["self"],["color"]],["bool"]]],[11,"ne","","",18,[[["self"],["color"]],["bool"]]],[11,"default","gxi::pref_storage","",15,[[],["xiconfig"]]],[11,"default","gxi::proto","",17,[[],["style"]]],[11,"default","","",19,[[],["themesettings"]]],[11,"default","gxi::theme","",29,[[],["theme"]]],[11,"cmp","gxi::errors","",5,[[["self"],["error"]],["ordering"]]],[11,"clone","","",5,[[["self"]],["error"]]],[11,"clone","gxi::linecache","",7,[[["self"]],["stylespan"]]],[11,"clone","","",8,[[["self"]],["line"]]],[11,"clone","gxi::proto","",17,[[["self"]],["style"]]],[11,"clone","","",18,[[["self"]],["color"]]],[11,"clone","","",20,[[["self"]],["underlineoption"]]],[11,"clone","","",19,[[["self"]],["themesettings"]]],[11,"clone","gxi::rpc","",21,[[["self"]],["core"]]],[11,"clone","gxi::shared_queue","",26,[[["self"]],["coremsg"]]],[11,"clone","","",25,[[["self"]],["sharedqueue"]]],[11,"clone","gxi::theme","",27,[[["self"]],["color"]]],[11,"clone","","",28,[[["self"]],["style"]]],[11,"clone","","",29,[[["self"]],["theme"]]],[11,"from","gxi::errors","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"from","","",5,[[["error"]],["self"]]],[11,"assert_receiver_is_total_eq","","",5,N],[11,"assert_receiver_is_total_eq","gxi::proto","",17,N],[11,"assert_receiver_is_total_eq","","",18,N],[11,"partial_cmp","gxi::errors","",5,[[["self"],["error"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["error"]],["bool"]]],[11,"le","","",5,[[["self"],["error"]],["bool"]]],[11,"gt","","",5,[[["self"],["error"]],["bool"]]],[11,"ge","","",5,[[["self"],["error"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","gxi::linecache","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","gxi::main_win","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","gxi::pref_storage","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","gxi::proto","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","gxi::shared_queue","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","gxi::theme","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","gxi::errors","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",5,N],[11,"hash","gxi::proto","",17,N],[11,"fill_buf","gxi::xi_thread","",31,[[["self"]],["result"]]],[11,"consume","","",31,[[["self"],["usize"]]]],[11,"read_line","","",31,[[["self"],["string"]],["result",["usize"]]]],[11,"read","","",31,N],[11,"write","","",32,N],[11,"flush","","",32,[[["self"]],["result"]]],[11,"write_all","","",32,N],[11,"serialize","gxi::pref_storage","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","gxi::proto","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"deserialize","gxi::main_win","",10,[[["__d"]],["result"]]],[11,"deserialize","gxi::pref_storage","",15,[[["__d"]],["result"]]],[11,"deserialize","gxi::proto","",17,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",20,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"name","gxi::errors","",5,[[["self"]],["option",["str"]]]],[11,"cause","","",5,[[["self"]],["option",["fail"]]]],[11,"backtrace","","",5,[[["self"]],["option",["backtrace"]]]]],"paths":[[3,"AboutWin"],[3,"EVReplace"],[3,"EVFont"],[3,"EVInterfaceFont"],[3,"EditView"],[4,"Error"],[3,"ErrorDialog"],[3,"StyleSpan"],[3,"Line"],[3,"LineCache"],[3,"MeasureWidth"],[3,"MainState"],[3,"MainWin"],[4,"SaveAction"],[3,"Config"],[3,"XiConfig"],[3,"PrefsWin"],[3,"Style"],[3,"Color"],[3,"ThemeSettings"],[4,"UnderlineOption"],[3,"Core"],[3,"CoreState"],[8,"Callback"],[3,"ErrMsg"],[3,"SharedQueue"],[4,"CoreMsg"],[3,"Color"],[3,"Style"],[3,"Theme"],[3,"XiPeer"],[3,"ChanReader"],[3,"ChanWriter"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
